{"version":3,"file":"platform.js","sources":["stores/platform.ts"],"sourcesContent":["import { computed, reactive, ref, watch } from 'vue';\r\nimport { defineStore } from 'pinia';\r\nimport { apiRequest } from '@/common/api';\r\nimport type {\r\n  PlatformAgentLoginResponse,\r\n  PlatformAgentProfile,\r\n  PlatformAuthorLoginResponse,\r\n  PlatformAuthorProfile,\r\n  PlatformAuthorSoftware,\r\n  PlatformAuthorSoftwareCodeResponse,\r\n  PlatformAuthorUpdatePayload,\r\n  PlatformBinding,\r\n  WeChatBindResult,\r\n  WeChatBindingInfo,\r\n  WeChatTemplateConfig\r\n} from '@/common/types';\r\nimport {\r\n  clearAuthorToken,\r\n  clearPlatformToken,\r\n  clearSelectedSoftwareName,\r\n  clearToken,\r\n  getAuthorToken,\r\n  getPlatformToken,\r\n  getSelectedSoftwareName,\r\n  getWeChatSubscriptions,\r\n  setAuthorToken,\r\n  setPlatformToken,\r\n  setSelectedSoftwareName,\r\n  setWeChatSubscriptions\r\n} from '@/utils/storage';\r\n\r\ninterface AgentRegisterPayload {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  softwareCode: string;\r\n  authorAccount: string;\r\n  authorPassword: string;\r\n}\r\n\r\ninterface AgentLoginPayload {\r\n  account: string;\r\n  password: string;\r\n}\r\n\r\ninterface AuthorRegisterPayload {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  displayName: string;\r\n  apiAddress: string;\r\n  apiPort: number;\r\n  softwareType: string;\r\n}\r\n\r\ninterface AuthorSoftwarePayload {\r\n  displayName: string;\r\n  apiAddress: string;\r\n  apiPort: number;\r\n  softwareType: string;\r\n}\r\n\r\ninterface AuthorLoginPayload {\r\n  account: string;\r\n  password: string;\r\n}\r\n\r\ninterface BindingPayload {\r\n  softwareCode: string;\r\n  authorAccount: string;\r\n  authorPassword: string;\r\n}\r\n\r\nexport const usePlatformStore = defineStore('platform', () => {\r\n  const agent = ref<PlatformAgentProfile | null>(null);\r\n  const token = ref<string | null>(getPlatformToken());\r\n  const expiresAt = ref<string | null>(null);\r\n  const bindings = ref<PlatformBinding[]>([]);\r\n  const selectedBinding = ref<PlatformBinding | null>(null);\r\n  const authorProfile = ref<PlatformAuthorProfile | null>(null);\r\n  const authorToken = ref<string | null>(getAuthorToken());\r\n  const authorExpiresAt = ref<string | null>(null);\r\n  const selectedAuthorSoftwareId = ref<number | null>(null);\r\n  const agentWeChatBinding = ref<WeChatBindingInfo | null>(null);\r\n  const authorWeChatBinding = ref<WeChatBindingInfo | null>(null);\r\n  const agentWechatSubscriptions = ref<Record<string, boolean>>({});\r\n  const authorWechatSubscriptions = ref<Record<string, boolean>>({});\r\n  const wechatTemplates = ref<WeChatTemplateConfig | null>(null);\r\n  const wechatTemplatePreviews = ref<Record<string, Record<string, string>>>({});\r\n\r\n  const wechatTemplatesLoaded = ref(false);\r\n\r\n  const loading = reactive({\r\n    registerAgent: false,\r\n    loginAgent: false,\r\n    loginAgentWeChat: false,\r\n    registerAuthor: false,\r\n    loginAuthor: false,\r\n    bindings: false,\r\n    createBinding: false,\r\n    deleteBinding: false,\r\n    updateBinding: false,\r\n    authorProfile: false,\r\n    updateAuthor: false,\r\n    regenerateAuthorCode: false,\r\n    deleteAuthor: false,\r\n    createAuthorSoftware: false,\r\n    updateAuthorSoftware: false,\r\n    deleteAuthorSoftware: false,\r\n    wechatBinding: false,\r\n    wechatBind: false,\r\n    wechatUnbind: false,\r\n    wechatTemplates: false\r\n  });\r\n\r\n  function refreshWechatSubscriptions(role: 'agent' | 'author') {\r\n    const binding = role === 'agent' ? agentWeChatBinding.value : authorWeChatBinding.value;\r\n    const target = role === 'agent' ? agentWechatSubscriptions : authorWechatSubscriptions;\r\n    if (binding?.openId) {\r\n      target.value = getWeChatSubscriptions(binding.openId);\r\n    } else {\r\n      target.value = {};\r\n    }\r\n  }\r\n\r\n  watch(\r\n    () => agentWeChatBinding.value?.openId ?? null,\r\n    () => refreshWechatSubscriptions('agent')\r\n  );\r\n\r\n  watch(\r\n    () => authorWeChatBinding.value?.openId ?? null,\r\n    () => refreshWechatSubscriptions('author')\r\n  );\r\n\r\n  function setSession(session?: PlatformAgentLoginResponse | null) {\r\n    if (!session) {\r\n      agent.value = null;\r\n      token.value = null;\r\n      expiresAt.value = null;\r\n      bindings.value = [];\r\n      selectedBinding.value = null;\r\n      agentWeChatBinding.value = null;\r\n      clearPlatformToken();\r\n      clearToken();\r\n      clearSelectedSoftwareName();\r\n      return;\r\n    }\r\n\r\n    agent.value = session.agent;\r\n    token.value = session.token || token.value;\r\n    expiresAt.value = session.expiresAt ?? null;\r\n    bindings.value = session.bindings ?? [];\r\n\r\n    if (session.token) {\r\n      setPlatformToken(session.token);\r\n    }\r\n\r\n    const storedCode = getSelectedSoftwareName();\r\n    const preferred = bindings.value.find((item) => item.softwareCode === storedCode);\r\n    selectBinding(preferred || bindings.value[0] || null);\r\n  }\r\n\r\n  function selectBinding(binding: PlatformBinding | null) {\r\n    selectedBinding.value = binding;\r\n    if (!binding) {\r\n      clearSelectedSoftwareName();\r\n      return;\r\n    }\r\n    setSelectedSoftwareName(binding.softwareCode);\r\n  }\r\n\r\n  function setAuthorProfile(profile: PlatformAuthorProfile | null) {\r\n    authorProfile.value = profile;\r\n    if (!profile) {\r\n      selectedAuthorSoftwareId.value = null;\r\n      return;\r\n    }\r\n\r\n    const available = profile.softwares?.map((item) => item.softwareId) ?? [];\r\n    const preferred = profile.primarySoftwareId ?? selectedAuthorSoftwareId.value ?? null;\r\n    const resolved = preferred && available.includes(preferred) ? preferred : available[0] ?? null;\r\n    selectedAuthorSoftwareId.value = resolved ?? null;\r\n  }\r\n\r\n  function selectAuthorSoftware(softwareId: number | null) {\r\n    selectedAuthorSoftwareId.value = softwareId ?? null;\r\n  }\r\n\r\n  function setAuthorSession(session?: PlatformAuthorLoginResponse | null) {\r\n    if (!session) {\r\n      setAuthorProfile(null);\r\n      authorToken.value = null;\r\n      authorExpiresAt.value = null;\r\n      authorWeChatBinding.value = null;\r\n      clearAuthorToken();\r\n      return;\r\n    }\r\n\r\n    setAuthorProfile(session.profile);\r\n    authorToken.value = session.token;\r\n    authorExpiresAt.value = session.expiresAt;\r\n    setAuthorToken(session.token);\r\n  }\r\n\r\n  async function registerAgent(payload: AgentRegisterPayload) {\r\n    loading.registerAgent = true;\r\n    try {\r\n      await apiRequest<PlatformAgentProfile>({\r\n        url: '/api/agents/register',\r\n        method: 'POST',\r\n        data: payload\r\n      });\r\n      return true;\r\n    } finally {\r\n      loading.registerAgent = false;\r\n    }\r\n  }\r\n\r\n  async function loginAgent(payload: AgentLoginPayload) {\r\n    loading.loginAgent = true;\r\n    try {\r\n      const response = await apiRequest<PlatformAgentLoginResponse>({\r\n        url: '/api/agents/login',\r\n        method: 'POST',\r\n        data: payload\r\n      });\r\n      setSession(response);\r\n      await fetchWeChatBinding('agent').catch(() => undefined);\r\n      await fetchWeChatTemplates().catch(() => undefined);\r\n      return response;\r\n    } finally {\r\n      loading.loginAgent = false;\r\n    }\r\n  }\r\n\r\n  async function loginAgentWithWeChat(jsCode: string) {\r\n    if (!jsCode) {\r\n      throw new Error('未获取到 jsCode');\r\n    }\r\n\r\n    loading.loginAgentWeChat = true;\r\n    try {\r\n      const response = await apiRequest<PlatformAgentLoginResponse>({\r\n        url: '/api/agents/login/wechat',\r\n        method: 'POST',\r\n        skipProxy: true,\r\n        data: { jsCode }\r\n      });\r\n      setSession(response);\r\n      await fetchWeChatBinding('agent').catch(() => undefined);\r\n      await fetchWeChatTemplates().catch(() => undefined);\r\n      return response;\r\n    } finally {\r\n      loading.loginAgentWeChat = false;\r\n    }\r\n  }\r\n\r\n  async function fetchAgentProfile() {\r\n    loading.bindings = true;\r\n    try {\r\n      const response = await apiRequest<PlatformAgentLoginResponse>({\r\n        url: '/api/agents/me',\r\n        method: 'GET',\r\n        auth: true\r\n      });\r\n      setSession({\r\n        ...response,\r\n        token: token.value || getPlatformToken() || ''\r\n      });\r\n      await fetchWeChatBinding('agent').catch(() => undefined);\r\n      await fetchWeChatTemplates().catch(() => undefined);\r\n      return response;\r\n    } finally {\r\n      loading.bindings = false;\r\n    }\r\n  }\r\n\r\n  async function createBinding(payload: BindingPayload) {\r\n    loading.createBinding = true;\r\n    try {\r\n      const result = await apiRequest<PlatformBinding>({\r\n        url: '/api/bindings',\r\n        method: 'POST',\r\n        auth: true,\r\n        data: payload\r\n      });\r\n      bindings.value = [result, ...bindings.value];\r\n      if (!selectedBinding.value) {\r\n        selectBinding(result);\r\n      }\r\n      return result;\r\n    } finally {\r\n      loading.createBinding = false;\r\n    }\r\n  }\r\n\r\n  async function updateBinding(bindingId: number, payload: BindingPayload) {\r\n    loading.updateBinding = true;\r\n    try {\r\n      const result = await apiRequest<PlatformBinding>({\r\n        url: `/api/bindings/${bindingId}`,\r\n        method: 'PUT',\r\n        auth: true,\r\n        data: {\r\n          authorAccount: payload.authorAccount,\r\n          authorPassword: payload.authorPassword\r\n        }\r\n      });\r\n      bindings.value = bindings.value.map((item) => (item.bindingId === bindingId ? result : item));\r\n      if (selectedBinding.value?.bindingId === bindingId) {\r\n        selectBinding(result);\r\n      }\r\n      return result;\r\n    } finally {\r\n      loading.updateBinding = false;\r\n    }\r\n  }\r\n\r\n  async function deleteBinding(bindingId: number) {\r\n    loading.deleteBinding = true;\r\n    try {\r\n      await apiRequest<string>({\r\n        url: `/api/bindings/${bindingId}`,\r\n        method: 'DELETE',\r\n        auth: true\r\n      });\r\n      bindings.value = bindings.value.filter((item) => item.bindingId !== bindingId);\r\n      if (selectedBinding.value?.bindingId === bindingId) {\r\n        selectBinding(bindings.value[0] || null);\r\n      }\r\n    } finally {\r\n      loading.deleteBinding = false;\r\n    }\r\n  }\r\n\r\n  async function registerAuthor(payload: AuthorRegisterPayload) {\r\n    loading.registerAuthor = true;\r\n    try {\r\n      const response = await apiRequest<PlatformAuthorProfile>({\r\n        url: '/api/authors/register',\r\n        method: 'POST',\r\n        data: payload\r\n      });\r\n      return response;\r\n    } finally {\r\n      loading.registerAuthor = false;\r\n    }\r\n  }\r\n\r\n  async function loginAuthor(payload: AuthorLoginPayload) {\r\n    loading.loginAuthor = true;\r\n    try {\r\n      const response = await apiRequest<PlatformAuthorLoginResponse>({\r\n        url: '/api/authors/login',\r\n        method: 'POST',\r\n        data: payload\r\n      });\r\n      setAuthorSession(response);\r\n      await fetchWeChatBinding('author').catch(() => undefined);\r\n      return response.profile;\r\n    } finally {\r\n      loading.loginAuthor = false;\r\n    }\r\n  }\r\n\r\n  async function fetchAuthorProfile() {\r\n    loading.authorProfile = true;\r\n    try {\r\n      const profile = await apiRequest<PlatformAuthorProfile>({\r\n        url: '/api/authors/me',\r\n        method: 'GET',\r\n        auth: true,\r\n        authRole: 'author'\r\n      });\r\n      setAuthorProfile(profile);\r\n      await fetchWeChatBinding('author').catch(() => undefined);\r\n      return profile;\r\n    } finally {\r\n      loading.authorProfile = false;\r\n    }\r\n  }\r\n\r\n  async function updateAuthorProfile(payload: PlatformAuthorUpdatePayload) {\r\n    loading.updateAuthor = true;\r\n    try {\r\n      const profile = await apiRequest<PlatformAuthorProfile>({\r\n        url: '/api/authors/me',\r\n        method: 'PUT',\r\n        auth: true,\r\n        authRole: 'author',\r\n        data: payload\r\n      });\r\n      setAuthorProfile(profile);\r\n      return profile;\r\n    } finally {\r\n      loading.updateAuthor = false;\r\n    }\r\n  }\r\n\r\n  async function regenerateAuthorCode(softwareId?: number) {\r\n    loading.regenerateAuthorCode = true;\r\n    try {\r\n      const response = await apiRequest<PlatformAuthorSoftwareCodeResponse>({\r\n        url: softwareId ? `/api/authors/me/regenerate-code?softwareId=${softwareId}` : '/api/authors/me/regenerate-code',\r\n        method: 'POST',\r\n        auth: true,\r\n        authRole: 'author'\r\n      });\r\n      return response.softwareCode;\r\n    } finally {\r\n      loading.regenerateAuthorCode = false;\r\n    }\r\n  }\r\n\r\n  async function createAuthorSoftware(payload: AuthorSoftwarePayload) {\r\n    loading.createAuthorSoftware = true;\r\n    try {\r\n      const software = await apiRequest<PlatformAuthorSoftware>({\r\n        url: '/api/authors/me/softwares',\r\n        method: 'POST',\r\n        auth: true,\r\n        authRole: 'author',\r\n        data: payload\r\n      });\r\n      await fetchAuthorProfile();\r\n      selectedAuthorSoftwareId.value = software.softwareId;\r\n      return software;\r\n    } finally {\r\n      loading.createAuthorSoftware = false;\r\n    }\r\n  }\r\n\r\n  async function updateAuthorSoftware(softwareId: number, payload: AuthorSoftwarePayload) {\r\n    loading.updateAuthorSoftware = true;\r\n    try {\r\n      await apiRequest<PlatformAuthorSoftware>({\r\n        url: `/api/authors/me/softwares/${softwareId}`,\r\n        method: 'PUT',\r\n        auth: true,\r\n        authRole: 'author',\r\n        data: payload\r\n      });\r\n      const profile = await fetchAuthorProfile();\r\n      if (profile) {\r\n        selectedAuthorSoftwareId.value = softwareId;\r\n      }\r\n    } finally {\r\n      loading.updateAuthorSoftware = false;\r\n    }\r\n  }\r\n\r\n  async function deleteAuthorSoftware(softwareId: number) {\r\n    loading.deleteAuthorSoftware = true;\r\n    try {\r\n      await apiRequest<string>({\r\n        url: `/api/authors/me/softwares/${softwareId}`,\r\n        method: 'DELETE',\r\n        auth: true,\r\n        authRole: 'author'\r\n      });\r\n      const profile = await fetchAuthorProfile();\r\n      if (profile) {\r\n        const exists = profile.softwares.some((item) => item.softwareId === selectedAuthorSoftwareId.value);\r\n        if (!exists) {\r\n          selectedAuthorSoftwareId.value = profile.primarySoftwareId ?? profile.softwares[0]?.softwareId ?? null;\r\n        }\r\n      }\r\n    } finally {\r\n      loading.deleteAuthorSoftware = false;\r\n    }\r\n  }\r\n\r\n  async function deleteAuthorAccount() {\r\n    loading.deleteAuthor = true;\r\n    try {\r\n      await apiRequest<string>({\r\n        url: '/api/authors/me',\r\n        method: 'DELETE',\r\n        auth: true,\r\n        authRole: 'author'\r\n      });\r\n      setAuthorSession(null);\r\n    } finally {\r\n      loading.deleteAuthor = false;\r\n    }\r\n  }\r\n\r\n  async function fetchWeChatBinding(role: 'agent' | 'author' = 'agent') {\r\n    const hasToken = role === 'agent' ? Boolean(token.value) : Boolean(authorToken.value);\r\n    if (!hasToken) {\r\n      if (role === 'agent') {\r\n        agentWeChatBinding.value = null;\r\n      } else {\r\n        authorWeChatBinding.value = null;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    loading.wechatBinding = true;\r\n    try {\r\n      const response = await apiRequest<WeChatBindingInfo | null>({\r\n        url: '/api/wechat/binding',\r\n        method: 'GET',\r\n        auth: true,\r\n        authRole: role,\r\n        skipProxy: true\r\n      });\r\n\r\n      if (role === 'agent') {\r\n        agentWeChatBinding.value = response ?? null;\r\n        refreshWechatSubscriptions('agent');\r\n      } else {\r\n        authorWeChatBinding.value = response ?? null;\r\n        refreshWechatSubscriptions('author');\r\n      }\r\n\r\n      if (role === 'agent') {\r\n        await fetchWeChatTemplates().catch(() => undefined);\r\n      }\r\n\r\n      return response ?? null;\r\n    } finally {\r\n      loading.wechatBinding = false;\r\n    }\r\n  }\r\n\r\n  async function fetchWeChatTemplates(force = false) {\r\n    if (wechatTemplatesLoaded.value && !force && wechatTemplates.value) {\r\n      return wechatTemplates.value;\r\n    }\r\n\r\n    loading.wechatTemplates = true;\r\n    try {\r\n      const response = await apiRequest<WeChatTemplateConfig>({\r\n        url: '/api/wechat/templates',\r\n        method: 'GET',\r\n        skipProxy: true\r\n      });\r\n      wechatTemplates.value = response;\r\n      wechatTemplatePreviews.value = response?.previewData ?? {};\r\n      wechatTemplatesLoaded.value = true;\r\n      return response;\r\n    } finally {\r\n      loading.wechatTemplates = false;\r\n    }\r\n  }\r\n\r\n  async function bindWeChat(role: 'agent' | 'author', jsCode: string, nickname?: string | null) {\r\n    if (!jsCode) {\r\n      throw new Error('未获取到 jsCode');\r\n    }\r\n\r\n    loading.wechatBind = true;\r\n    try {\r\n      const trimmedNickname = typeof nickname === 'string' ? nickname.trim() : undefined;\r\n      await apiRequest<WeChatBindResult>({\r\n        url: '/api/wechat/bind',\r\n        method: 'POST',\r\n        auth: true,\r\n        authRole: role,\r\n        skipProxy: true,\r\n        data: { jsCode, nickname: trimmedNickname }\r\n      });\r\n\r\n      await fetchWeChatBinding(role);\r\n\r\n      return role === 'agent' ? agentWeChatBinding.value : authorWeChatBinding.value;\r\n    } finally {\r\n      loading.wechatBind = false;\r\n    }\r\n  }\r\n\r\n  async function unbindWeChat(role: 'agent' | 'author') {\r\n    loading.wechatUnbind = true;\r\n    try {\r\n      await apiRequest<string>({\r\n        url: '/api/wechat/bind',\r\n        method: 'DELETE',\r\n        auth: true,\r\n        authRole: role,\r\n        skipProxy: true\r\n      });\r\n\r\n      if (role === 'agent') {\r\n        agentWeChatBinding.value = null;\r\n        refreshWechatSubscriptions('agent');\r\n      } else {\r\n        authorWeChatBinding.value = null;\r\n        refreshWechatSubscriptions('author');\r\n      }\r\n    } finally {\r\n      loading.wechatUnbind = false;\r\n    }\r\n  }\r\n\r\n  function setAgentWechatSubscription(key: string, value: boolean) {\r\n    const binding = agentWeChatBinding.value;\r\n    if (!binding?.openId) {\r\n      return;\r\n    }\r\n    agentWechatSubscriptions.value = {\r\n      ...agentWechatSubscriptions.value,\r\n      [key]: value\r\n    };\r\n    setWeChatSubscriptions(binding.openId, agentWechatSubscriptions.value);\r\n  }\r\n\r\n  function setAuthorWechatSubscription(key: string, value: boolean) {\r\n    const binding = authorWeChatBinding.value;\r\n    if (!binding?.openId) {\r\n      return;\r\n    }\r\n    authorWechatSubscriptions.value = {\r\n      ...authorWechatSubscriptions.value,\r\n      [key]: value\r\n    };\r\n    setWeChatSubscriptions(binding.openId, authorWechatSubscriptions.value);\r\n  }\r\n\r\n  async function sendWeChatPreview(role: 'agent' | 'author', templateKey: string, silent = false) {\r\n    const payload = wechatTemplatePreviews.value?.[templateKey];\r\n    if (!payload || Object.keys(payload).length === 0) {\r\n      if (!silent) {\r\n        uni.showToast({ title: '未配置该提醒的测试内容', icon: 'none' });\r\n      }\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const result = await apiRequest<WeChatNotificationResult>({\r\n        url: '/api/wechat/notify',\r\n        method: 'POST',\r\n        auth: true,\r\n        authRole: role,\r\n        skipProxy: true,\r\n        data: {\r\n          template: templateKey,\r\n          data: payload\r\n        }\r\n      });\r\n\r\n      if (!result?.success) {\r\n        if (!silent) {\r\n          const message = result?.errorMessage?.trim() || `模板 ${templateKey} 推送失败`;\r\n          uni.showToast({ title: message, icon: 'none' });\r\n        }\r\n        return false;\r\n      }\r\n\r\n      if (!silent) {\r\n        uni.showToast({ title: '已发送测试提醒', icon: 'success' });\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      if (!silent) {\r\n        const message = (error as any)?.errMsg || (error as any)?.message || '推送失败，请稍后重试';\r\n        uni.showToast({ title: message, icon: 'none' });\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function logout() {\r\n    setSession(null);\r\n    agentWechatSubscriptions.value = {};\r\n  }\r\n\r\n  function logoutAuthor() {\r\n    setAuthorSession(null);\r\n    authorWechatSubscriptions.value = {};\r\n  }\r\n\r\n  const isAuthenticated = computed(() => Boolean(token.value));\r\n  const isAuthorAuthenticated = computed(() => Boolean(authorToken.value));\r\n\r\n  return {\r\n    agent,\r\n    token,\r\n    expiresAt,\r\n    bindings,\r\n    selectedBinding,\r\n    authorProfile,\r\n    authorToken,\r\n    authorExpiresAt,\r\n    selectedAuthorSoftwareId,\r\n    agentWeChatBinding,\r\n    authorWeChatBinding,\r\n    agentWechatSubscriptions,\r\n    authorWechatSubscriptions,\r\n    loading,\r\n    wechatTemplates,\r\n    wechatTemplatePreviews,\r\n    isAuthenticated,\r\n    isAuthorAuthenticated,\r\n    registerAgent,\r\n    loginAgent,\r\n    loginAgentWithWeChat,\r\n    fetchAgentProfile,\r\n    createBinding,\r\n    updateBinding,\r\n    deleteBinding,\r\n    registerAuthor,\r\n    loginAuthor,\r\n    fetchAuthorProfile,\r\n    updateAuthorProfile,\r\n    regenerateAuthorCode,\r\n    createAuthorSoftware,\r\n    updateAuthorSoftware,\r\n    deleteAuthorSoftware,\r\n    deleteAuthorAccount,\r\n    selectBinding,\r\n    selectAuthorSoftware,\r\n    fetchWeChatBinding,\r\n    fetchWeChatTemplates,\r\n    bindWeChat,\r\n    unbindWeChat,\r\n    refreshWechatSubscriptions,\r\n    setAgentWechatSubscription,\r\n    setAuthorWechatSubscription,\r\n    sendWeChatPreview,\r\n    logout,\r\n    logoutAuthor,\r\n    setAuthorSession\r\n  };\r\n});\r\n"],"names":["defineStore","ref","getPlatformToken","getAuthorToken","reactive","getWeChatSubscriptions","watch","clearPlatformToken","clearToken","clearSelectedSoftwareName","setPlatformToken","getSelectedSoftwareName","setSelectedSoftwareName","clearAuthorToken","setAuthorToken","apiRequest","setWeChatSubscriptions","uni","computed"],"mappings":"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"}
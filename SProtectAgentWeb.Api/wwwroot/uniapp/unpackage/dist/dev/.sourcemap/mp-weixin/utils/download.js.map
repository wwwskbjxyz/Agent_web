{"version":3,"file":"download.js","sources":["utils/download.ts"],"sourcesContent":["export function downloadTextFile(filename: string, content: string, mime = 'text/plain;charset=utf-8') {\r\n  const normalizedName = filename && filename.trim().length > 0 ? filename.trim() : `export-${Date.now()}.txt`;\r\n\r\n  // #ifdef H5\r\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\r\n    try {\r\n      const blob = new Blob([content], { type: mime });\r\n      const url = URL.createObjectURL(blob);\r\n      const anchor = document.createElement('a');\r\n      anchor.href = url;\r\n      anchor.download = normalizedName;\r\n      anchor.style.display = 'none';\r\n      document.body.appendChild(anchor);\r\n      anchor.click();\r\n      document.body.removeChild(anchor);\r\n      setTimeout(() => URL.revokeObjectURL(url), 0);\r\n      return true;\r\n    } catch (error) {\r\n      console.warn('downloadTextFile fallback', error);\r\n    }\r\n  }\r\n  // #endif\r\n\r\n  if (typeof uni !== 'undefined' && uni.setClipboardData) {\r\n    uni.setClipboardData({\r\n      data: content,\r\n      success: () => {\r\n        uni.showToast({ title: '内容已复制', icon: 'success' });\r\n      },\r\n      fail: () => {\r\n        uni.showToast({ title: '导出失败', icon: 'none' });\r\n      }\r\n    });\r\n    return false;\r\n  }\r\n\r\n  return false;\r\n}\r\n"],"names":["uni"],"mappings":";;AAAO,SAAS,iBAAiB,UAAkB,SAAiB,OAAO,4BAA4B;AAC9E,cAAY,SAAS,OAAO,SAAS,IAAI,SAAS,KAAK,IAAI,UAAU,KAAK,KAAK;AAsBtG,MAAI,OAAOA,cAAA,UAAQ,eAAeA,cAAAA,MAAI,kBAAkB;AACtDA,kBAAAA,MAAI,iBAAiB;AAAA,MACnB,MAAM;AAAA,MACN,SAAS,MAAM;AACbA,sBAAA,MAAI,UAAU,EAAE,OAAO,SAAS,MAAM,WAAW;AAAA,MACnD;AAAA,MACA,MAAM,MAAM;AACVA,sBAAA,MAAI,UAAU,EAAE,OAAO,QAAQ,MAAM,QAAQ;AAAA,MAC/C;AAAA,IAAA,CACD;AACM,WAAA;AAAA,EACT;AAEO,SAAA;AACT;;"}